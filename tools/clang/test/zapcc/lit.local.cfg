config.zapcc_cxxflags=' -std=c++14 -pthread -fexceptions'
nm_filter = ' | sed "s/.................//;s/C2E/C1E/g;/GCC_except_table/d;/cxx_global_array_dtor/d;/cxx_global_var_init/d;/\.LCPI/d" > '

config.substitutions.append( ('%zap_compare_object', 'cd %S && ' + config.clang + ' -c %file -std=c++11 -target x86_64-pc-linux %cxxflags -o %t.clang.o && llvm-nm %t.clang.o' + nm_filter + '%t.clang.txt &&rm -f %t.clang.o &&' + config.zapcc + ' -c %file -std=c++11 -target x86_64-pc-linux %cxxflags -o %t.zap.o -serverid %# && llvm-nm %t.zap.o' + nm_filter + '%t.zap.txt && diff -u %t.clang.txt %t.zap.txt') )
config.substitutions.append( ('%zap_duplicate', config.zapcc + ' %file %file -fsyntax-only -std=c++14 -serverid %# 2>&1 | not grep "error:"') )
config.substitutions.append( ('%zapccxx', config.zapcc + ' -serverid %# --driver-mode=g++') )
config.substitutions.append( ('%zapcc_reset', config.zapcc + ' -cc1 -reset-server -serverid %#') )

# Flags. Replace %flags with value in FLAGS=<value> expression, only if exists.
config.substitutions.append( (r'%cxxflags(?=.*CXXFLAGS="(.*?)")',r'\1') )
config.substitutions.append( (r'CXXFLAGS="(.*?)"','') )
config.substitutions.append( (r'%file(?=.*FILE="(.*?)")',r'\1') )
config.substitutions.append( (r'FILE="(.*?)"','') )
# Set default value for regext substitutions in case no KEY=VALUE found.
# For %regex subsitutions to work, those %keys need to be last in the list.
config.substitutions.append( ('%cxxflags',config.zapcc_cxxflags) )
config.substitutions.append( ('%file','%s') )
